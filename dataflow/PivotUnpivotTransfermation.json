{
	"name": "PivotUnpivotTransfermation",
	"properties": {
		"folder": {
			"name": "DataflowTransfermations"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_testing_EmpData",
						"type": "DatasetReference"
					},
					"name": "EmpData"
				},
				{
					"dataset": {
						"referenceName": "ds_testing_DeptData",
						"type": "DatasetReference"
					},
					"name": "DeptDept"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_testing_sink",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "pivot1"
				},
				{
					"name": "join1"
				},
				{
					"name": "unpivot1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EMP_ID as string,",
				"          EMP_NAME as string,",
				"          GENDER as string,",
				"          DOJ as string,",
				"          SALARY as string,",
				"          DEPT_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> EmpData",
				"source(output(",
				"          DEPT_ID as string,",
				"          DEPT_NAME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DeptDept",
				"join1 pivot(groupBy(EmpData@DEPT_ID),",
				"     pivotBy(GENDER),",
				"     {} = count(EMP_ID),",
				"     columnNaming: '$N$V',",
				"     lateral: true) ~> pivot1",
				"EmpData, DeptDept join(EmpData@DEPT_ID == DeptDept@DEPT_ID,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"pivot1 unpivot(output(",
				"          Gender as string,",
				"          Total as integer",
				"     ),",
				"     ungroupBy(DEPT_ID),",
				"     lateral: true,",
				"     ignoreNullPivots: false) ~> unpivot1",
				"unpivot1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}
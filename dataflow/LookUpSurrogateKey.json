{
	"name": "LookUpJoinsSurrogateKey",
	"properties": {
		"folder": {
			"name": "Testing"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_testing_EmpData",
						"type": "DatasetReference"
					},
					"name": "EmpData"
				},
				{
					"dataset": {
						"referenceName": "ds_testing_DeptData",
						"type": "DatasetReference"
					},
					"name": "DeptData"
				},
				{
					"dataset": {
						"referenceName": "ds_testing_EmpData",
						"type": "DatasetReference"
					},
					"name": "Empsource1"
				},
				{
					"dataset": {
						"referenceName": "ds_testing_DeptData",
						"type": "DatasetReference"
					},
					"name": "Depsource1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_testing_sink",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "ds_testing_sink",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "lookup"
				},
				{
					"name": "LOuterJoin"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "select1"
				},
				{
					"name": "select2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EMP_ID as string,",
				"          EMP_NAME as string,",
				"          GENDER as string,",
				"          DOJ as string,",
				"          SALARY as string,",
				"          DEPT_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> EmpData",
				"source(output(",
				"          DEPT_ID as string,",
				"          DEPT_NAME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DeptData",
				"source(output(",
				"          EMP_ID as string,",
				"          EMP_NAME as string,",
				"          GENDER as string,",
				"          DOJ as string,",
				"          SALARY as string,",
				"          DEPT_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Empsource1",
				"source(output(",
				"          DEPT_ID as string,",
				"          DEPT_NAME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Depsource1",
				"EmpData, DeptData lookup(EmpData@DEPT_ID == DeptData@DEPT_ID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup",
				"Empsource1, Depsource1 join(Empsource1@DEPT_ID == Depsource1@DEPT_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> LOuterJoin",
				"select1 keyGenerate(output(sno as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"lookup select(mapColumn(",
				"          EMP_ID,",
				"          EMP_NAME,",
				"          GENDER,",
				"          DOJ,",
				"          SALARY,",
				"          DEPT_ID = EmpData@DEPT_ID,",
				"          DEPT_ID = DeptData@DEPT_ID,",
				"          DEPT_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"surrogateKey1 select(mapColumn(",
				"          sno,",
				"          EMP_ID,",
				"          EMP_NAME,",
				"          GENDER,",
				"          DOJ,",
				"          SALARY,",
				"          DEPT_ID,",
				"          DEPT_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1",
				"LOuterJoin sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink2"
			]
		}
	}
}